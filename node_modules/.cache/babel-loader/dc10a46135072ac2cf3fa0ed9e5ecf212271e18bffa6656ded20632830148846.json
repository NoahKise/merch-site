{"ast":null,"code":"var _jsxFileName = \"/Users/NoahKise/Desktop/merch-site/src/components/stateControl.js\";\nimport React from \"react\";\nimport NewInventoryForm from \"./NewInventoryForm\";\nimport MasterStock from \"./MasterStockList\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nclass InverntoryControl extends React.Component {\n  constructor(props) {\n    super(props);\n    this.handleClick = () => {\n      this.setState(prevState => ({\n        formVisibleOnPage: !prevState.formVisibleOnPage\n      }));\n    };\n    this.handleAddingNewInventoryToList = newInventory => {\n      const newMainInventoryList = this.state.mainInventoryList.concat(newInventory);\n      this.setState({\n        mainInventoryList: newMainInventoryList,\n        formVisibleOnPage: false\n      });\n    };\n    this.state = {\n      formVisibleOnPage: false,\n      mainInventoryList: [] //add this prop and pass down as prop to TicketList. empty so don't start with fake tickets\n    };\n  }\n  //false so user sees queue again, not form\n  render() {\n    let currentlyVisibleState = null;\n    let buttonText = null;\n    if (this.state.formVisibleOnPage) {\n      currentlyVisibleState = /*#__PURE__*/_jsxDEV(NewInventoryForm, {\n        onNewInventoryCreation: this.handleAddingNewInventoryToList\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 31\n      }, this); //passing handle() down to NewtickForm as prop called onNewTicketCreation\n      buttonText = \"Return to Storefront\";\n    } else {\n      currentlyVisibleState = /*#__PURE__*/_jsxDEV(MasterStock, {\n        masterStock: this.state.mainInventoryList\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 31\n      }, this); //passing down prop to TicketList child\n      buttonText = \"Add Item\";\n    }\n    return /*#__PURE__*/_jsxDEV(React.Fragment, {\n      children: [currentlyVisibleState, /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: this.handleClick,\n        children: buttonText\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this);\n  }\n}\nexport default InverntoryControl;","map":{"version":3,"names":["React","NewInventoryForm","MasterStock","jsxDEV","_jsxDEV","InverntoryControl","Component","constructor","props","handleClick","setState","prevState","formVisibleOnPage","handleAddingNewInventoryToList","newInventory","newMainInventoryList","state","mainInventoryList","concat","render","currentlyVisibleState","buttonText","onNewInventoryCreation","fileName","_jsxFileName","lineNumber","columnNumber","masterStock","Fragment","children","onClick"],"sources":["/Users/NoahKise/Desktop/merch-site/src/components/stateControl.js"],"sourcesContent":["import React from \"react\";\nimport NewInventoryForm from \"./NewInventoryForm\";\nimport MasterStock from \"./MasterStockList\";\n\nclass InverntoryControl extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      formVisibleOnPage: false, \n      mainInventoryList: [] //add this prop and pass down as prop to TicketList. empty so don't start with fake tickets\n    };\n  }\n  handleClick = () => {\n    this.setState(prevState =>({formVisibleOnPage: !prevState.formVisibleOnPage}));\n  }\n  handleAddingNewInventoryToList = (newInventory) => {\n    const newMainInventoryList = this.state.mainInventoryList.concat(newInventory);\n    this.setState({\n      mainInventoryList: newMainInventoryList, \n      formVisibleOnPage: false\n    });\n  } //false so user sees queue again, not form\n  render(){\n    let currentlyVisibleState = null;\n    let buttonText = null;\n    if (this.state.formVisibleOnPage) {\n      currentlyVisibleState = <NewInventoryForm onNewInventoryCreation={this.handleAddingNewInventoryToList} />; //passing handle() down to NewtickForm as prop called onNewTicketCreation\n      buttonText = \"Return to Storefront\";\n    } else {\n      currentlyVisibleState = <MasterStock masterStock={this.state.mainInventoryList}/>; //passing down prop to TicketList child\n      buttonText = \"Add Item\";\n      \n    }\n    return (\n      <React.Fragment>\n        {currentlyVisibleState}\n        <button onClick={this.handleClick}>{buttonText}</button>\n      </React.Fragment>\n    );\n  }\n\n}\n\nexport default InverntoryControl;"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,gBAAgB,MAAM,oBAAoB;AACjD,OAAOC,WAAW,MAAM,mBAAmB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE5C,MAAMC,iBAAiB,SAASL,KAAK,CAACM,SAAS,CAAC;EAE9CC,WAAWA,CAACC,KAAK,EAAE;IACjB,KAAK,CAACA,KAAK,CAAC;IAAC,KAMfC,WAAW,GAAG,MAAM;MAClB,IAAI,CAACC,QAAQ,CAACC,SAAS,KAAI;QAACC,iBAAiB,EAAE,CAACD,SAAS,CAACC;MAAiB,CAAC,CAAC,CAAC;IAChF,CAAC;IAAA,KACDC,8BAA8B,GAAIC,YAAY,IAAK;MACjD,MAAMC,oBAAoB,GAAG,IAAI,CAACC,KAAK,CAACC,iBAAiB,CAACC,MAAM,CAACJ,YAAY,CAAC;MAC9E,IAAI,CAACJ,QAAQ,CAAC;QACZO,iBAAiB,EAAEF,oBAAoB;QACvCH,iBAAiB,EAAE;MACrB,CAAC,CAAC;IACJ,CAAC;IAdC,IAAI,CAACI,KAAK,GAAG;MACXJ,iBAAiB,EAAE,KAAK;MACxBK,iBAAiB,EAAE,EAAE,CAAC;IACxB,CAAC;EACH;EAUE;EACFE,MAAMA,CAAA,EAAE;IACN,IAAIC,qBAAqB,GAAG,IAAI;IAChC,IAAIC,UAAU,GAAG,IAAI;IACrB,IAAI,IAAI,CAACL,KAAK,CAACJ,iBAAiB,EAAE;MAChCQ,qBAAqB,gBAAGhB,OAAA,CAACH,gBAAgB;QAACqB,sBAAsB,EAAE,IAAI,CAACT;MAA+B;QAAAU,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,CAAC,CAAC;MAC3GL,UAAU,GAAG,sBAAsB;IACrC,CAAC,MAAM;MACLD,qBAAqB,gBAAGhB,OAAA,CAACF,WAAW;QAACyB,WAAW,EAAE,IAAI,CAACX,KAAK,CAACC;MAAkB;QAAAM,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAC,CAAC,CAAC,CAAC;MACnFL,UAAU,GAAG,UAAU;IAEzB;IACA,oBACEjB,OAAA,CAACJ,KAAK,CAAC4B,QAAQ;MAAAC,QAAA,GACZT,qBAAqB,eACtBhB,OAAA;QAAQ0B,OAAO,EAAE,IAAI,CAACrB,WAAY;QAAAoB,QAAA,EAAER;MAAU;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAS,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC1C,CAAC;EAErB;AAEF;AAEA,eAAerB,iBAAiB"},"metadata":{},"sourceType":"module","externalDependencies":[]}